buildscript {
	repositories {
		mavenCentral()
	}

	dependencies {
		classpath('org.jooq:jooq-codegen:3.14.13')
		classpath 'mysql:mysql-connector-java:8.0.26'
	}
}

group = 'me.ryang'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
}

import org.jooq.codegen.GenerationTool
import org.jooq.meta.jaxb.Configuration
import org.jooq.meta.jaxb.Database
import org.jooq.meta.jaxb.Generate
import org.jooq.meta.jaxb.Generator
import org.jooq.meta.jaxb.Jdbc
import org.jooq.meta.jaxb.Target

def jooqDir = "/src/main/jooq"
def jooqAbsolutDir = "${project.projectDir}${jooqDir}"
def dbUrl  = env.fetch('DB_URL')
def dbUser = env.fetchOrNull('DB_USER')
def dbPass = env.fetchOrNull('DB_PASSWORD')

tasks.register('generateJooq') {
	doLast {
		delete fileTree(jooqAbsolutDir).include('/')
		GenerationTool.generate(new Configuration()
			.withJdbc(new Jdbc()
				.withDriver('com.mysql.cj.jdbc.Driver')
				.withUrl("${dbUrl}")
				.withUser("${dbUser}")
				.withPassword("${dbPass}"))
			.withGenerator(new Generator()
				.withDatabase(new Database()
					.withName("org.jooq.meta.mysql.MySQLDatabase")
					.withIncludes("jooq_example\\..*")
					.withExcludes('flyway_schema_history')
					.withIncludeUniqueKeys(false)
					.withIncludeForeignKeys(false)
				)
				.withGenerate(new Generate()
					.withDeprecated(false))
				.withTarget(new Target()
					.withPackageName('me.ryang.jooq')
					.withDirectory(jooqAbsolutDir))))
	}
}

sourceSets {
	main {
		java {
			srcDir(jooqAbsolutDir)
		}
	}
}